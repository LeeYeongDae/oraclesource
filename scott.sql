
SELECT * FROM EMP e;

SELECT e.EMPNO, e.ENAME, e.job FROM EMP e; 

SELECT e.EMPNO, e.DEPTNO FROM EMP e;

SELECT DISTINCT e.EMPNO, e.DEPTNO FROM EMP e;

SELECT  * FROM EMP e ORDER BY e.DEPTNO DESC, e.ENAME ASC;

SELECT * FROM EMP e WHERE e.sal BETWEEN 2000 AND 3000;

SELECT * FROM EMP e WHERE e.ENAME LIKE '_L%';

SELECT * FROM EMP e WHERE e.ENAME LIKE '%AM%';

SELECT * FROM EMP e WHERE e.ENAME NOT LIKE '%AM%';

SELECT * FROM EMP e WHERE e.MGR IS not NULL;

SELECT sysdate AS now, sysdate-1 AS yesterday, sysdate+1 AS tomorrow,
	CURRENT_DATE AS curdate, CURRENT_TIMESTAMP AS curtime
FROM dual;

SELECT sysdate, ADD_MONTHS(sysdate, 3)
FROM dual;

SELECT e.EMPNO, e.ENAME, e.HIREDATE, TRUNC(MONTHS_BETWEEN(sysdate, e.HIREDATE))
FROM EMP e;

SELECT sysdate, NEXT_DAY(sysdate,'월요일'), LAST_DAY(sysdate)
FROM dual;
 	--자동 형변환
SELECT e.EMPNO, e.ENAME, e.EMPNO+'500'
FROM EMP e 
WHERE e.ENAME = 'SMITH';

SELECT TO_CHAR(sysdate,'YYYY/MM/DD, YY MON MONTH DY DAY HH:MI:SS HH12 HH24 AM PM')
FROM dual;

SELECT e.SAL, TO_CHAR(e.SAL, '$999,000')
FROM EMP e;

--empno 99**, ename N****
SELECT e.EMPNO, SUBSTR(e.EMPNO, 0, 2)||'**' AS "EMPNO Masked",
e.ENAME, SUBSTR(e.ENAME, 0, 1)||SUBSTR('********',0,LENGTH(e.ENAME)-1) AS "ENAME Masked"
FROM EMP e;

--평균 근무일 21, 하루 8시간으로 하루 급여(day_pay), 시급(time_pay) / 일급은 소수 셋자리 버림, 시급 두자리 반올림
-- EMPNO, ENAME, SAL, DAY_PAY, TIME_PAY
SELECT e.EMPNO, e.ENAME, e.SAL, TRUNC(e.SAL/21, 2) AS "DAY_PAY", ROUND((e.SAL/21)/8,1) AS "TIME_PAY"
FROM EMP e;

--입사일기준 3개월후 첫 월요일에 정직원, 정직원날짜(R_HOB) YYYY-MM-DD, 추가수당 없으면 N/A 출력
-- EMPNO, ENAME, HIERDARE, R_JOB, COMM
SELECT e.EMPNO, e.ENAME, TO_CHAR(e.HIREDATE,'YYYY-MM-DD') AS "HIREDATE",
TO_CHAR(NEXT_DAY((ADD_MONTHS(e.HIREDATE, 3)),'월요일'),'YYYY-MM-DD') AS "R_JOB", NVL(TO_CHAR(e.COMM), 'N/A') AS "COMM"
FROM EMP e;

--직속상관의 사원번호 X = 0000, 두번째자리 XXXX 5~8만
-- EMPNO, ENAME, MGR, CHG_MGR
SELECT e.EMPNO, e.ENAME, e.MGR, 
CASE WHEN e.MGR IS NULL THEN '0000'
WHEN e.MGR LIKE '75%' THEN '5555'
WHEN e.MGR LIKE '76%' THEN '6666'
WHEN e.MGR LIKE '77%' THEN '7777'
WHEN e.MGR LIKE '78%' THEN '8888'
ELSE TO_CHAR(e.MGR) END AS "CHG_MGR"
FROM EMP e;

SELECT e.EMPNO, e.ENAME, e.MGR, 
DECODE(SUBSTR(TO_CHAR(e.MGR),1,2),
NULL, '0000',
'75', '5555',
'76', '6666',
'77', '7777',
'78', '8888',
TO_CHAR(e.MGR))
FROM EMP e;

SELECT sum(e.sal) FROM EMP e;
SELECT sum(e.sal), sum(DISTINCT e.sal) FROM EMP e;
SELECT count(e.EMPNO) FROM EMP e ;
SELECT MAX(e.SAL), MIN(e.SAL) FROM EMP e ;
SELECT MAX(e.SAL) FROM EMP e WHERE e.DEPTNO = 10;
SELECT MAX(e.HIREDATE), MIN(e.HIREDATE) FROM EMP e WHERE e.DEPTNO = 20;
SELECT AVG(e.SAL) FROM EMP e WHERE e.DEPTNO = 30;

SELECT e.DEPTNO, AVG(e.SAL) FROM EMP e GROUP BY e.DEPTNO;

SELECT e.JOB, COUNT(e.EMPNO) FROM EMP e GROUP BY e.JOB HAVING COUNT(e.empno) >= 3;

SELECT TO_CHAR(e.HIREDATE, 'YYYY'), e.DEPTNO, COUNT(e.EMPNO) FROM EMP e GROUP BY TO_CHAR(e.HIREDATE, 'YYYY'), e.DEPTNO;

SELECT e.EMPNO, e.DEPTNO, d.DNAME, d.LOC FROM EMP e, DEPT d WHERE e.DEPTNO = d.DEPTNO;

SELECT e.EMPNO, e.DEPTNO, e.SAL, d.DNAME, d.LOC FROM EMP e, DEPT d WHERE e.DEPTNO = d.DEPTNO AND e.SAL >= 3000;

SELECT e1.EMPNO, e1.ENAME, e1.MGR, e2.ENAME AS mgr_name FROM EMP e1, EMP e2 WHERE e1.MGR = e2.EMPNO;

SELECT e1.EMPNO, e1.ENAME, e1.MGR, e2.ENAME AS mgr_name FROM EMP e1, EMP e2 WHERE e1.MGR = e2.EMPNO(+);

SELECT e1.EMPNO, e1.ENAME, e1.MGR, e2.ENAME AS mgr_name FROM EMP e1, EMP e2 WHERE e1.MGR(+) = e2.EMPNO;

SELECT * FROM EMP e JOIN SALGRADE s ON e.SAL BETWEEN s.LOSAL AND s.HISAL;

SELECT e1.EMPNO, e1.ENAME, e1.MGR, e2.ENAME AS mgr_name FROM EMP e1 RIGHT OUTER JOIN EMP e2 ON e1.MGR = e2.EMPNO;

--급여 2000 초과 사원의 부서정보, 사원정보
SELECT e.DEPTNO, d.DNAME, e.EMPNO, e.ENAME, e.SAL
FROM EMP e
JOIN DEPT d ON
e.DEPTNO = d.DEPTNO
WHERE e.SAL > 2000;

SELECT e.DEPTNO, d.DNAME, e.EMPNO, e.ENAME, e.JOB, e.SAL
FROM EMP e
JOIN DEPT d ON e.DEPTNO = d.DEPTNO 
ORDER BY e.EMPNO, e.DEPTNO;

--모든 부서정보와 사원 정보를 부서번호 사원번호 순서 정렬
SELECT e.DEPTNO, d.DNAME, e.EMPNO, e.ENAME, e.MGR, e.SAL, s.LOSAL, s.HISAL, s.GRADE, e2.EMPNO AS mgr_empno, e2.ENAME AS mgr_name
FROM EMP e
JOIN DEPT d ON
	e.DEPTNO = d.DEPTNO
JOIN SALGRADE s ON
	e.SAL BETWEEN s.LOSAL AND s.HISAL
LEFT OUTER JOIN EMP e2 ON
	e.MGR = e2.EMPNO
ORDER BY
	e.EMPNO, e.DEPTNO;

SELECT
	d.DEPTNO,
	d.DNAME,
	round(AVG(e.SAL), 0) AS avg_sal,
	min(e.SAL),
	max(e.SAL),
	COUNT(e.EMPNO) AS cnt_emp
FROM
	EMP e
JOIN DEPT d ON
	e.DEPTNO = d.DEPTNO
GROUP BY
	d.DEPTNO,
	d.DNAME;
	
SELECT
e.EMPNO, e.ENAME, e.DEPTNO, e.SAL,
(SELECT s.GRADE FROM SALGRADE s WHERE e.SAL BETWEEN s.LOSAL AND s.HISAL) AS salgrade,
(SELECT d.DNAME FROM DEPT d WHERE e.DEPTNO = d.DEPTNO) AS dname
FROM EMP e;

SELECT 
e.EMPNO, e.ENAME, e.JOB, e.DEPTNO, d.DNAME, d.LOC 
FROM EMP e
JOIN DEPT d ON e.DEPTNO = d.DEPTNO 
WHERE e.DEPTNO = 10 AND e.job NOT IN (SELECT e.job FROM EMP e WHERE e.DEPTNO = 30);

SELECT e.EMPNO, e.ENAME, e.SAL, (SELECT s.GRADE FROM SALGRADE s WHERE e.SAL BETWEEN s.LOSAL AND s.HISAL) AS salgrade
FROM EMP e
WHERE e.sal > (SELECT max(e.sal) FROM EMP e WHERE e.JOB = 'SALESMAN')
ORDER BY e.EMPNO ASC;

SELECT e.EMPNO, e.ENAME, e.SAL, (SELECT s.GRADE FROM SALGRADE s WHERE e.SAL BETWEEN s.LOSAL AND s.HISAL) AS salgrade
FROM EMP e
WHERE e.sal > ALL(SELECT e.sal FROM EMP e WHERE e.JOB = 'SALESMAN')
ORDER BY e.EMPNO ASC;

CREATE TABLE dept_temp AS SELECT * FROM DEPT;

INSERT INTO DEPT_TEMP(deptno, dname, loc) VALUES(50, 'DATABASE', 'SEOUL');

DROP TABLE EXAM_EMP;

CREATE TABLE EXAM_EMP AS SELECT * FROM EMP;
CREATE TABLE EXAM_DEPT AS SELECT * FROM DEPT;
CREATE TABLE EXAM_SALGRADE AS SELECT * FROM SALGRADE;

INSERT INTO EXAM_DEPT(deptno, dname, loc) VALUES(50, 'ORACLE', 'BUSAN');
INSERT INTO EXAM_DEPT VALUES(60, 'SQL', 'ILSAN');
INSERT INTO EXAM_DEPT VALUES(70, 'SELECT', 'INCHEON');
INSERT INTO EXAM_DEPT VALUES(80, 'DML', 'BUNDANG');

INSERT INTO EXAM_EMP(empno, ename, job, mgr, hiredate, sal, comm, deptno) VALUES(7201, 'USER1', 'MANAGER', 7788, '2016-02-01', 4500, NULL, 50);
INSERT INTO EXAM_EMP VALUES(7202, 'USER2', 'CLERK', 7201, '2016-02-16', 1800, NULL, 50);
INSERT INTO EXAM_EMP VALUES(7203, 'USER3', 'ANALYST', 7201, '2016-04-11', 3400, NULL, 60);
INSERT INTO EXAM_EMP VALUES(7204, 'USER4', 'SALESMAN', 7201, '2016-05-31', 2700, 300, 60);
INSERT INTO EXAM_EMP VALUES(7205, 'USER5', 'CLERK', 7201, '2016-07-20', 2600, NULL, 70);
INSERT INTO EXAM_EMP VALUES(7206, 'USER6', 'CLERK', 7201, '2016-09-08', 2600, NULL, 70);
INSERT INTO EXAM_EMP VALUES(7207, 'USER7', 'LECTURER', 7201, '2016-10-28', 2300, NULL, 80);
INSERT INTO EXAM_EMP VALUES(7208, 'USER8', 'STUDENT', 7201, '2018-03-09', 1200, NULL, 80);

--EXAM_EMP에서 50번에서 일하는 사원의 평균보다 많이 받는 사원을 70번으로
UPDATE EXAM_EMP ee
SET DEPTNO = 70
WHERE ee.SAL > (SELECT round(avg(ee.sal)) FROM EXAM_EMP ee WHERE ee.DEPTNO = 50);

SELECT round(avg(ee.sal)) FROM EXAM_EMP ee WHERE ee.DEPTNO = 50


--EXAM_EMP에서 입사일이 가장 빠른 60번 부서사원보다 늦게 입사한 사원의 급여를 10% 인상시키고 80번으로
UPDATE EXAM_EMP ee
SET SAL = SAL *1.1, DEPTNO = 80
WHERE ee.HIREDATE > (SELECT MIN(ee.HIREDATE) FROM EXAM_EMP ee WHERE ee.DEPTNO = 60) AND ee.DEPTNO = 60;

--EXAM_EMP에서 급여등급이 5인 사원을 삭제
DELETE FROM EXAM_EMP ee
WHERE ee.EMPNO IN (SELECT ee.EMPNO FROM EXAM_EMP ee, EXAM_SALGRADE es WHERE (ee.SAL BETWEEN es.LOSAL AND es.HISAL) AND es.GRADE = 5); 

INSERT INTO DEPT_TEMP VALUES(30, 'DATABASE','SEOUL');

CREATE TABLE DEPT_DDL(
DEPTNO NUMBER(2,0),
DNAME VARCHAR2(14),
LOC VARCHAR2(13));

CREATE TABLE EMP_DDL(
EMPNO NUMBER(4,0),
ENAME VARCHAR2(10),
JOB VARCHAR2(9),
MGR NUMBER(7,2),
HIREDATE DATE,
SAL NUMBER(7,2),
COMM NUMBER(7,2),
DEPTNO NUMBER(4,0)
);

--MEMBER 테이블 생성
CREATE TABLE MEMBER(
NO NUMBER(2) UNIQUE,
ID VARCHAR2(8) PRIMARY KEY,
NAME VARCHAR2(10)NOT NULL,
ADDR VARCHAR2(50),
EMAIL VARCHAR2(30) NOT NULL,
AGE NUMBER(4,0));

--MEMBER 테이블에 BIGO 열 추가
ALTER TABLE MEMBER ADD BIGO VARCHAR2(20);

--BIGO 크기 30으로 변경
ALTER TABLE MEMBER MODIFY BIGO VARCHAR2(30);

--BIGO 이름 REMARK로 변경
ALTER TABLE MEMBER RENAME COLUMN BIGO TO REMARK;

SELECT * FROM USER_INDEXES;

ALTER TABLE MEMBER MODIFY no NUMBER(8); 

DROP TABLE MEMBER;

CREATE SEQUENCE MEMBER_SEQ_NO MAXVALUE 9999;

DROP SEQUENCE MEMBER_SEQ_NO;

CREATE TABLE TBL_NOTNULL (
LOGIN_ID VARCHAR2(20) CONSTRAINT TB_NN2_LGIN_NN NOT NULL,
LOGIN_PWD VARCHAR2(20) CONSTRAINT TB_NN2_LGIN_NN NOT NULL,
TEL VARCHAR2(20));

ALTER TABLE TBL_NOTNULL MODIFY (TEL CONSTRAINT TB_NN2_TEL_NN NOT NULL);

ALTER TABLE TBL_NOTNULL RENAME CONSTRAINT TB_NN2_TEL_NN TO TB_NN2_TEL_NN2;

ALTER TABLE TBL_NOTNULL DROP CONSTRAINT TB_NN2_TEL_NN2;

CREATE TABLE TBL_UNIQUE (
LOGIN_ID VARCHAR2(20) UNIQUE,
LOGIN_PWD VARCHAR2(20) NOT NULL,
TEL VARCHAR2(20));

INSERT INTO TBL_UNIQUE(LOGIN_ID, LOGIN_PWD, TEL)
VALUES('123', '123', '010-1234-5678');

CREATE TABLE DEPT_FK(
DEPTNO NUMBER(2) CONSTRAINT DEPTFK_DEPTNO_PK PRIMARY KEY,
DNAME VARCHAR2(14),
LOC VARCHAR2(13));

CREATE TABLE EMP_FK(
EMPNO NUMBER(4) CONSTRAINT EMPFK_EMPNO_PK PRIMARY KEY,
ENAME VARCHAR2(10) NOT NULL,
JOB VARCHAR2(9) NOT NULL,
MGR NUMBER(4),
HIREDATE DATE,
SAL NUMBER(7,2) NOT NULL,
COMM NUMBER(7,2),
DEPTNO NUMBER(2) CONSTRAINT EMPFK_DEPTNO_FK REFERENCES DEPT_FK(DEPTNO)
);

INSERT INTO DEPT_FK VALUES (10, 'DATABASE', 'SEOUL');

INSERT INTO EMP_FK(EMPNO, ENAME, JOB, HIREDATE, SAL, DEPTNO)
VALUES(9999, 'TEST1', 'PARTNER', SYSDATE, 2500, 10);

CREATE TABLE TBL_DEFAULT(
    LOGIN_ID VARCHAR2(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) NOT NULL DEFAULT '1234'
);

